{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/readonly-profile/webpack/bootstrap","webpack://@clarkwinkelmann/readonly-profile/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/readonly-profile/webpack/runtime/define property getters","webpack://@clarkwinkelmann/readonly-profile/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/readonly-profile/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@clarkwinkelmann/readonly-profile/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/readonly-profile/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/LogInModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","import {Child} from 'mithril';\nimport app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport LogInModal from 'flarum/forum/components/LogInModal';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\n\napp.initializers.add('readonly-profile', () => {\n    extend(HeaderSecondary.prototype, 'items', function (items) {\n        if (app.forum.attribute('readonly-profile.disableLogin')) {\n            items.remove('logIn');\n        }\n    });\n\n    extend(IndexPage.prototype, 'sidebarItems', function (items) {\n        if (\n            !app.forum.attribute('readonly-profile.disableLogin') ||\n            !items.has('newDiscussion') ||\n            app.session.user\n        ) {\n            return;\n        }\n\n        const newDiscussionVdom = items.get('newDiscussion');\n\n        // Force \"new discussion\" button to show \"can't start discussion\" for guests\n        // because the default behaviour was to open the login modal which is no longer available\n        newDiscussionVdom.attrs.disabled = true;\n        newDiscussionVdom.children = app.translator.trans('core.forum.index.cannot_start_discussion_button');\n    });\n\n    extend(PostStream.prototype, 'view', function (vdom) {\n        if (!vdom || !Array.isArray(vdom.children)) {\n            // If the data format is unexpected, skip this feature\n            return;\n        }\n\n        if (!app.forum.attribute('readonly-profile.disableLogin') || app.session.user) {\n            // If we are not disabling login or if the user is already logged in, skip\n            return;\n        }\n\n        // Remove the .PostStream-item containing ReplyPlaceholder\n        const index = (vdom.children as Child[]).findIndex(item => item && typeof item === 'object' && item.attrs && item.attrs.key === 'reply');\n\n        if (index !== -1) {\n            vdom.children.splice(index, 1);\n        }\n    });\n\n    extend(DiscussionControls, 'userControls', function (items) {\n        if (\n            !app.forum.attribute('readonly-profile.disableLogin') ||\n            !items.has('reply') ||\n            app.session.user\n        ) {\n            return;\n        }\n\n        const replyVdom = items.get('reply');\n\n        // Keep the original button that says login to reply, but disable it\n        replyVdom.attrs.disabled = true;\n    });\n\n    // Remove reply link for guests if login is disabled (it would bring up the login modal)\n    extend(CommentPost.prototype, 'actionItems', function (items) {\n        if (\n            !app.forum.attribute('readonly-profile.disableLogin') ||\n            !items.has('reply') ||\n            app.session.user\n        ) {\n            return;\n        }\n\n        items.remove('reply');\n    });\n\n    const PostQuoteButton = flarum.core.compat['mentions/forum/fragments/PostQuoteButton'];\n\n    // Because we can't easily remove the quote button for guests, we'll keep it but make it disabled state\n    if (PostQuoteButton) {\n        extend(PostQuoteButton.prototype, 'view', function (vdom) {\n            if (\n                !app.forum.attribute('readonly-profile.disableLogin') ||\n                app.session.user\n            ) {\n                return;\n            }\n\n            // If the data format is unexpected, skip this feature\n            if (!vdom || !vdom.attrs) {\n                return;\n            }\n\n            // Disable quote button\n            vdom.attrs.disabled = true;\n        });\n    }\n\n    extend(SettingsPage.prototype, 'accountItems', function (items) {\n        if (app.forum.attribute('readonly-profile.disableEmailChange')) {\n            items.remove('changeEmail');\n        }\n        if (app.forum.attribute('readonly-profile.disablePasswordChange')) {\n            items.remove('changePassword');\n        }\n    });\n\n    extend(UserCard, 'initAttrs', function (returnValue, attrs: any) {\n        if (app.forum.attribute('readonly-profile.disableAvatarEdit')) {\n            attrs.editable = false;\n        }\n    });\n\n    extend(LogInModal.prototype, 'footer', function (vdom) {\n        if (!app.forum.attribute('readonly-profile.disablePasswordChange')) {\n            return;\n        }\n\n        // Remove forgot password link\n        if (\n            Array.isArray(vdom) &&\n            vdom.length &&\n            vdom[0] &&\n            vdom[0].attrs &&\n            vdom[0].attrs.className === 'LogInModal-forgotPassword'\n        ) {\n            vdom.splice(0, 1);\n        }\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","HeaderSecondary","items","remove","IndexPage","has","newDiscussionVdom","attrs","disabled","children","PostStream","vdom","Array","isArray","index","findIndex","item","splice","DiscussionControls","CommentPost","PostQuoteButton","SettingsPage","UserCard","returnValue","editable","LogInModal","length","className"],"sourceRoot":""}